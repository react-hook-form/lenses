name: Release

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - '.gitignore'
      - '.npmignore'
      - '*.md'

jobs:
  release:
    name: Release
    if: github.repository == 'react-hook-form/lenses' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Build
        run: bun run build

      - name: Publish
        run: bunx semantic-release --branches main
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: '${{secrets.GITHUB_TOKEN}}'

  publish-next:
    name: Publish Next Version
    if: github.repository == 'react-hook-form/lenses' && github.event_name == 'pull_request' && contains(toJson(github.event.pull_request.labels), 'publish-next')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Build
        run: bun run build

      - name: Debug branch info
        run: |
          echo "github.head_ref: ${{ github.head_ref }}"
          echo "github.ref: ${{ github.ref }}"
          echo "GITHUB_REF: $GITHUB_REF"

      - name: Publish Next Version
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          if [ -z "$BRANCH_NAME" ]; then
            BRANCH_NAME="types-rework"
          fi
          echo "Using branch: $BRANCH_NAME"

          bunx semantic-release \
            --no-ci \
            --branches "[{\"name\": \"main\"}, {\"name\": \"$BRANCH_NAME\", \"channel\": \"next\", \"prerelease\": true}]" \
            --plugins '@semantic-release/commit-analyzer,@semantic-release/npm'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: '${{secrets.GITHUB_TOKEN}}'
