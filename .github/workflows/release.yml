name: Release

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, labeled]
    paths-ignore:
      - '.gitignore'
      - '.npmignore'
      - '*.md'

jobs:
  release:
    name: Release
    if: github.repository == 'react-hook-form/lenses' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Build
        run: bun run build

      - name: Publish
        run: bunx semantic-release --branches main
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: '${{secrets.GITHUB_TOKEN}}'

  publish-next:
    name: Publish Next Version
    if: github.repository == 'react-hook-form/lenses' && github.event_name == 'pull_request' && github.event.action == 'labeled' && github.event.label.name == 'publish-next'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Build
        run: bun run build

      - name: Generate canary version and publish
        run: |
          # Generate unique canary version
          PR_NUMBER="${{ github.event.pull_request.number }}"
          CURRENT_DATE=$(date +%Y%m%d)
          SHORT_COMMIT=$(git rev-parse --short HEAD)
          CANARY_VERSION="0.0.0-canary-${PR_NUMBER}-${CURRENT_DATE}-${SHORT_COMMIT}"

          echo "Publishing canary version: ${CANARY_VERSION}"

          # Update package.json version using bun
          bun --bun -e "
            const pkg = JSON.parse(require('fs').readFileSync('./package.json', 'utf8'));
            pkg.version = '${CANARY_VERSION}';
            require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2) + '\n');
          "

          # Publish with bun (uses NPM_CONFIG_TOKEN env var automatically)
          bun publish --tag next --access public
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
