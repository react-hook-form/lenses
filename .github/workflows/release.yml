name: Release

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - '.gitignore'
      - '.npmignore'
      - '*.md'

jobs:
  release:
    name: Release
    if: github.repository == 'react-hook-form/lenses' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Build
        run: bun run build

      - name: Publish
        run: bunx semantic-release --branches main
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: '${{secrets.GITHUB_TOKEN}}'

  publish-next:
    name: Publish Next Version
    if: github.repository == 'react-hook-form/lenses' && github.event_name == 'pull_request' && contains(toJson(github.event.pull_request.labels), 'publish-next')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          persist-credentials: false

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Build
        run: bun run build

      - name: Create semantic-release config
        run: |
          cat > .releaserc.json << 'EOF'
          {
            "branches": [
              {"name": "main"},
              {"name": "${{ github.head_ref }}", "channel": "next", "prerelease": true}
            ],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/npm"
            ]
          }
          EOF

      - name: Debug config
        run: cat .releaserc.json

      - name: Debug git info
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Git status:"
          git status
          echo "Git log (last commit):"
          git log -1 --oneline

      - name: Publish Next Version
        run: |
          # Force git to think we're on the actual branch
          git checkout -b ${{ github.head_ref }} || git checkout ${{ github.head_ref }}
          echo "Current branch after checkout: $(git branch --show-current)"

          # Create a simple config that only targets this branch
          cat > .releaserc.json << EOF
          {
            "branches": [
              {"name": "${{ github.head_ref }}", "channel": "next", "prerelease": true}
            ],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/npm"
            ]
          }
          EOF

          echo "Updated config:"
          cat .releaserc.json

          # Unset CI environment variables that might interfere
          unset GITHUB_ACTIONS
          unset CI

          bunx semantic-release --no-ci --debug
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: '${{secrets.GITHUB_TOKEN}}'
